var e=require("./projects.json"),n=require("node-fetch"),t=require("node-html-parser"),o=e.baseUrl,r=e.fileUrl,l=function(e){return Number(e.querySelector(".project-file-list-item").querySelector(".project-file-downloads").text)},a=function(e){var n=0;return e.querySelector(".cf-details").querySelectorAll("li").find(function(e){if("Total Downloads"===e.querySelector(".info-label").text){var t=e.querySelector(".info-data").text;return t=t.replace(",",""),n=Number(t),!0}}),n},c=function(e,o){return n(e).then(function(e){return e.text()}).then(t.parse).then(o)},u=e.projects.map(function(e){var n=""+o+e.id,t={name:e.name,recentDownloads:0,totalDownloads:0},u=c(""+n+r,l).then(function(e){t.recentDownloads=e}),i=c(n,a).then(function(e){t.totalDownloads=e});return Promise.all([u,i]).then(function(){return t})});Promise.all(u).then(function(e){var n=e.reduce(function(e,n){return e+n.totalDownloads},0),t=e.reduce(function(e,n){return e+n.recentDownloads},0);console.log("You have "+n+" total downloads and "+t+" recent downloads"),e.forEach(function(e){console.log(e.name+": "+e.totalDownloads+" total, "+e.recentDownloads+" recent")})});
//# sourceMappingURL=index.js.map
